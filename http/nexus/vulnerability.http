#-----------------------
# vulnerability.http
# 취약점 탐색 관련 API
#-----------------------

### 변수 값
// 저장소 이름
@repository=maven-central
// 컴포넌트 그룹
@componentGroup=log4j
// 컴포전트 이름
@componentName=log4j
// 컴포넌트 버전
@componentVersion=1.2.12
// 컴포넌트 패키지 링크
@componentPackageUrl=pkg:maven/log4j/log4j@1.2.12
// 취약점 보고서 ID
@vulnerabilityReportId=CVE-2023-26464
#-----------------------

### 1-1. 특정 Component의 취약점 보고서 조회
GET /v1/vulnerability/maven
    ?group={{componentGroup}}
    &name={{componentName}}
    &version={{componentVersion}}
Host: localhost:8080


### 1-2. 특정 Component 취약점 보고서 조회 (사용자 인증 필요)
GET /v1/vulnerability/maven
    ?group={{componentGroup}}
    &name={{componentName}}
    &version={{componentVersion}}
Authorization: "Basic base64-{username}-{password}"
Host: localhost:8080


### 2-1. 특정 저장소의 모든 Component에 대한 취약점 보고서 조회
GET /v1/vulnerability/maven/{{repository}}
Host: localhost:8080


### 2-2. 특정 저장소의 모든 Component에 대한 취약점 보고서 조회 (사용자 인증 필요)
GET /v1/vulnerability/maven/{{repository}}
Authorization: "Basic base64-{username}-{password}"
Host: localhost:8080


### 3. Maven 형태 저장소들의 모든 Component에 대한 취약점 요약 정보 조회
GET /v1/vulnerability/maven/headers
Host: localhost:8080


### 4. Maven 형태 저장소들의 특정 Component에 대한 취약점 요약 정보 조회
GET /v1/vulnerability/maven/header
    ?componentPackageUrl={{componentPackageUrl}}
Host: localhost:8080


### 5. Maven 형태 저장소들의 특정 Component에 대한 취약점 요약 정보 삭제
DELETE /v1/vulnerability/maven/header
    ?componentPackageUrl={{componentPackageUrl}}
Host: localhost:8080


### 6. Maven 형태 저장소들의 모든 Component에 대한 취약점 상세 정보 조회
GET /v1/vulnerability/maven/details
Host: localhost:8080


### 7. Maven 형태 저장소들의 특정 Component에 대한 취약점 상세 정보 조회
GET /v1/vulnerability/maven/detail
    ?packageUrl={{componentPackageUrl}}
    &reportId={{vulnerabilityReportId}}
Host: localhost:8080


### 8. Maven 형태 저장소들의 특정 Component에 대한 취약점 상세 정보 삭제
DELETE /v1/vulnerability/maven/detail
    ?packageUrl={{componentPackageUrl}}
    &reportId={{vulnerabilityReportId}}
Host: localhost:8080



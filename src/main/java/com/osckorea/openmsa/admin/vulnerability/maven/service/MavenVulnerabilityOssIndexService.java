package com.osckorea.openmsa.admin.vulnerability.maven.service;

import java.util.ArrayList;
import java.util.Collection;
import java.util.stream.Stream;
import org.springframework.stereotype.Service;
import com.osckorea.openmsa.admin.vulnerability.common.dto.ComponentListDto;
import com.osckorea.openmsa.admin.vulnerability.common.dto.ComponentVulnerabilityReportDto;
import com.osckorea.openmsa.admin.vulnerability.common.feign.ComponentFeignClient;
import com.osckorea.openmsa.admin.vulnerability.common.feign.VulnerabilityFeignClient;
import com.osckorea.openmsa.global.util.JsonUtil;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class MavenVulnerabilityOssIndexService {
    private final ComponentFeignClient componentFeignClient;
    private final VulnerabilityFeignClient vulnerabilityFeignClient;

    public ComponentVulnerabilityReportDto.Response[] getComponentVulnerability(String group, String name, String version) {
        ComponentVulnerabilityReportDto.Request request = ComponentVulnerabilityReportDto.Request.builder()
                                                .coordinates(new String[] {this.getPackageUrlString(group, name, version)})
                                                .build();

        return this.vulnerabilityFeignClient.getComponentVulnerabilityReports(request);
    }

    public Object test(String name) {
        ArrayList<ComponentVulnerabilityReportDto.Response> vulnerabilityReportsList = new ArrayList<ComponentVulnerabilityReportDto.Response>();
        String[] packageUrlList = new String[0];
        ComponentVulnerabilityReportDto.Response[] vulnerabilityReports = new ComponentVulnerabilityReportDto.Response[0];
        Integer count = 0;

        ComponentListDto response = this.componentFeignClient.getComponentList(name);

        while(true) {
            count += 1;

            packageUrlList = this.convertPackageUrlList(response.getItems());

            vulnerabilityReports = this.vulnerabilityFeignClient.getComponentVulnerabilityReports(ComponentVulnerabilityReportDto.Request.builder().coordinates(packageUrlList).build());

            Stream.of(vulnerabilityReports).filter(report -> report.getVulnerabilities().length > 0).forEach(report -> vulnerabilityReportsList.add(report));

            if(response.getContinuationToken() == null) {
                break;
            }

            if(count > 20) {
                break;
            }

            response = this.componentFeignClient.getComponentList(response.getContinuationToken(), name);
        }

        return JsonUtil.convertValue(vulnerabilityReportsList, ComponentVulnerabilityReportDto.Response[].class);
    }

    /**
     * 
     * @param componentGroup : 컴포넌트 그룹 명
     * @param componentName : 컴포넌트 이름
     * @param componentVersion : 컴포넌트 버전
     * 
     * @return "pkg:maven/{componentGroup}/{componentName}@{componentVersion}"
     */
    private String getPackageUrlString(String componentGroup, String componentName, String componentVersion) {
        StringBuilder componentVulnerabilityRequestData = new StringBuilder("pkg:maven/");

        componentVulnerabilityRequestData.append(componentGroup);
        componentVulnerabilityRequestData.append("/");
        componentVulnerabilityRequestData.append(componentName);
        componentVulnerabilityRequestData.append("@");
        componentVulnerabilityRequestData.append(componentVersion);

        return componentVulnerabilityRequestData.toString();
    }

    private String[] convertPackageUrlList(ComponentListDto.Item[] componentItemList) {
        ArrayList<String> packageUrlList = new ArrayList<String>();

        for(ComponentListDto.Item item : componentItemList) {
            packageUrlList.add(this.getPackageUrlString(item.getGroup(), item.getName(), item.getVersion()));
        }

        return JsonUtil.convertValue(packageUrlList, String[].class);
    }
}
